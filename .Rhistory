geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap( ~ cyl)
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap( ~ displ)
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap( ~ cty)
mpg$cty
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
mpg$cyl
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
library(tidyverse)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
?geom_smooth
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
)
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+
geom_point()
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+geom_point()+geom_smooth()
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+geom_point()+geom_smooth(se=FALSe)
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+geom_point()+geom_smooth(se = FALSe)
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+geom_point()+geom_smooth(se = FALSE)
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+geom_point()+geom_smooth(group = drv, se = FALSE)
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+geom_point()+geom_smooth(mapping = aes(x=displ,y=hwy,group=drv))
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+geom_point()+geom_smooth(mapping = aes(x=displ,y=hwy,group=drv),se = FALSE)
ggplot(data=mpg)+geom_point(mapping = aes(x=displ,y=hwy,color=drv))+geom_smooth(mapping = aes(x=displ,y=hwy,group=drv),se = FALSE)
ggplot(data=mpg)+geom_point(mapping = aes(x=displ,y=hwy,color=drv))+geom_smooth(mapping = aes(x=displ,y=hwy,group=drv,color=drv),se = FALSE)
ggplot(data=mpg)+geom_point(mapping = aes(x=displ,y=hwy,color=drv))+geom_smooth(mapping = aes(x=displ,y=hwy),se = FALSE)
ggplot(data=mpg)+geom_point(mapping = aes(x=displ,y=hwy,color=drv))+geom_smooth(mapping = aes(x=displ,y=hwy,group=drv,line=drv),se = FALSE)
ggplot(data=mpg)+geom_point(mapping = aes(x=displ,y=hwy,color=drv))+geom_smooth(mapping = aes(x=displ,y=hwy,group=drv,linetype=drv),se = FALSE)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
?stat_summary
?geom_col
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..,group = 1))
?geom_bar
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter")
seq(1,10)
y <- seq(1,10,length.out = 5)
y
library(nycflights13)
library(tidyverse)
?flights
filter(flights, month==1, day==1)
jan1 <- filter(flights, month == 1, day == 1)
(dec25 <- filter(flights, month ==12, day ==25))
sqrt(2)^2 == 2
near(sqrt(2)^2,2)
filter(flights, month == 11 | month == 12)
nov_dec <- filter(flights, month %in% c(11,12))
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(flights, arr_delay <= 120, dep_delay <= 120)
x <- NA
is.na(x)
?tibble
df <- tibble(x = c(1,NA,3))
filter(df,x > 1)
filter(df, is.na(x) | x > 1)
filter(flights, arr_delay >= 120)
filter(flights, dest == 'IAH' | dest == 'HOU')
flights$carrier
filter(flights, carrier == 'UA' | carrier == 'AA' | carrier == 'DL')
?flights
filter(flights, month == 7 | month == 8 | month == 9)
library(nycflights13)
library(tidyverse)
filter(flights, month==1, day==1)
jan1 <- filter(flights, month == 1, day == 1)
(dec25 <- filter(flights, month ==12, day ==25))
sqrt(2)^2 == 2
near(sqrt(2)^2,2)
filter(flights, month == 11 | month == 12)
nov_dec <- filter(flights, month %in% c(11,12))
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(flights, arr_delay <= 120, dep_delay <= 120)
x <- NA
is.na(x)
df <- tibble(x = c(1,NA,3))
filter(df,x > 1)
filter(df, is.na(x) | x > 1)
"1."
filter(flights, arr_delay >= 120)
filter(flights, dest == 'IAH' | dest == 'HOU')
filter(flights, carrier == 'UA' | carrier == 'AA' | carrier == 'DL')
filter(flights, month == 7 | month == 8 | month == 9)
?flights
flights$dep_delay
filter(flights, arr_delay > 2 & dep_delay <= 0)
filter(flights, dep_delay >= 1)
flights$dep_time
flights$arr_delay
filter(flights, dep_delay >= 60 & dep_delay - arr_delay > 30)
flights$hour
filter(flights, dep_time <= 600| dep_time == 2400)
is.na(flights$dep_time)
filter(flights, is.na(dep_time))
sum(is.na(flights$dep_time))
"3. " sum(is.na(flights$dep_time))
sum(is.na(flights$dep_time))
arrange(flights, year, month, day)
arrange(flights, desc(arr_delay))
df <- tibble(x = c(5, 2, NA))
arrange(df, x)
arrange(df, desc(x))
arrange(flights, desc(is.na(dep_time)), dep_time)
arrange(flights, desc(dep_delay))
arrange(flights, dep_delay)
arrange(flights, air_time)
arrange(flights, desc(distance))
select(flights, year, month, day)
select(flights, year:day)
select(flights, -(year:day))
rename(flights, tail_num = tailnum)
select(flights, time_hour, air_time, everything())
?everything
select(flights, dep_time, dep_delay, arr_time, arr_delay)
select(flights, dep_time, dep_time)
?one_of
select(flights, contains("TIME"))
mutate(flights,
dep_time_mins = dep_time %% 100 * 60 + dep_time %% 100,
sched_dep_time_mins = sched_dep_time %% 100 * 60 + sched_dep_time %% 100) %>%
select(dep_time, dep_time_mins, sched_dep_time, sched_dep_time_mins)
mutate(flights,
dep_time_mins = time2mins(dep_time),
sched_dep_time_mins = time2mins(sched_dep_time)) %>%
select(dep_time, dep_time_mins, sched_dep_time, sched_dep_time_mins)
time2mins <- function(x) {
x %% 100 * 60 + x %% 100
}
time2mins <- function(x) {
x %% 100 * 60 + x %% 100
}
mutate(flights,
dep_time_mins = time2mins(dep_time),
sched_dep_time_mins = time2mins(sched_dep_time)) %>%
select(dep_time, dep_time_mins, sched_dep_time, sched_dep_time_mins)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60
)
mutate(flights_sml,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
transmute(flights,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
mutate(flights,
air_time2 = arr_time - dep_time,
air_time_diff = air_time2 - air_time)
filter(air_time_diff != 0)
filter(flights, air_time_diff != 0)
mutate(flights,
air_time2 = arr_time - dep_time,
air_time_diff = air_time2 - air_time) %>%
filter(air_time_diff != 0)
mutate(flights,
air_time2 = arr_time - dep_time,
air_time_diff = air_time2 - air_time) %>%
filter(air_time_diff != 0) %>%
select(air_time, air_time2, dep_time, arr_time, dest)
mutate(flights,
dep_delay2 = dep_time - sched_dep_time) %>%
filter(dep_delay2 != dep_delay) %>%
select(dep_time, sched_dep_time, dep_delay, dep_delay2)
mutate(flights,
dep_delay2 = time2mins(dep_time) - time2mins(sched_dep_time)) %>%
filter(dep_delay2 != dep_delay) %>%
select(dep_time, sched_dep_time, dep_delay, dep_delay2)
mutate(flights,
dep_delay_rank = min_rank(-dep_delay)) %>%
arrange(dep_delay_rank) %>%
filter(dep_delay_rank <= 10)
1:3
1:3 + 1:10
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
by_day
?group_by
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL")
delay
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
?n()
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
?flights
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delay = mean(arr_delay, na.rm = TRUE),
n = n(
)
delays <- not_canelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n(
)
delays <- not_canelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n()
)
delays <- not_canelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n())
delays <- not_canelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n())
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n())
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
delays %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
batters <- as_tibble(Lahman::Batting)
batting <- as_tibble(Lahman::Batting)
batters <- batting %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
batters %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
my.number = 42
print(my.number)
chv1 = "hello"
chv2 = "world"
print(chv1)
6+4
x = 6+4
x
y = 4
x / y
x ^ 2
log(x)
v1 = c(1m 5.5, 1e2)
v1 = c(1, 5.5, 1e2)
c2 = c(-2, 0.5, 1)
v = c(v1, c2)
v
v[2]
v1 + c2
summary(v1)
names(v1)
names(v1) = c("cat","dog","rat")
names(v1)
1:6
seq(1,12,4)
ma = matrix(1:6, nrows=4, ncol=2)
ma = matrix(1:6, nrows=3, ncol=2)
ma = matrix(1:6, nrow=3, ncol=2)
ma
ma[,1]
library("swirl")
install.packages("swirl")
library("swirl")
install_course_github("dgrtwo", "RData", branch = "quizzes", multi = TRUE)
swirl()
ls()
mynum = 200
mychar = "hello world"
mynum2 = mynum + 20
300/90
8^4
log(15)
cos(15)
v1 = c(2,9,3,4.5)
length(v1)
v2 = c(15,4,8,10)
v3 = cbind(v1,v2)
v3 = c(v1,v2)
mean(v3)
v3[3]
m = cbind(v1, v2)
m2 = rbind(m2,c(8,12))
m2 = rbind(m,c(8,12))
m2[1:2,]
m2[,2]
list1 = list(c(1,3,4),"test",4)
list1[[3]]
list2 = list(c(1,3,4),"test",4)
list2 = list(a=c(1,3,4),b="test",c=4)
list2("c")
list2(c)
list2[c]
list2["c"]
list2$c
data("iris")
View(iris)
iris$Species
iris[3,]
iris[1:5,
]
v3 > 5
v3[v3>5]
iris$Petal.Width > 5
iris$Petal.Width > 5
iris$Petal.Length == 5
info()
skip()
iris[iris$Petal.Length>5,]
iris[iris$Petal.Length>5 & iris$Species=="versicolor",]
vignette("tibble")
getwd()
setwd("C:/Users/Anirudh/Desktop/Tribiani/data science with R/")
ls
getwd()
ls
ls()
library(tidyverse)
as_tibble(iris)
tibble(
x = 1:5
y = 1
z = x ^ 2 + y
)
tibble(
x = 1:5,
y = 1,
z = x ^ 2 + y
)
tb <- tibble(
`:)` = "smile",
` ` = "space",
`2000` = "number"
)
tb
tribble(
~x, ~y, ~z,
#--/--/----
"a", 2, 3.6,
"b", 1, 8.5
)
tibble(
a = lubridate::now() + runif(1e3) * 86400,
b = lubridate::today() + runif(1e3) * 30,
c = 1:1e3,
d = runif(1e3),
e = sample(letters, 1e3, replace = TRUE)
)
nycflights13::flights %>%
print(n = 10, width = Inf)
df <- tibble(
x = runif(5),
y = rnorm(5)
)
df$x
df[[x]]
df[["x"]]
df[[1]]
df %>% .$x
df %>% .[["x"]]
class(as.data.frame(tb))
class(mtcars)
df <- data.frame(abc = 1, xyz = "a")
df$x
df[,"xyz"]
df[,c("abc", "xyz")]
tbl <- as_tibble(df)
tbl$x
tbl[, "xyz"]
tbl[,c["abc", "xyz"]]
tbl[,c("abc", "xyz")]
annoying <- tibble(
`1` = 1:10,
`2` = `1` * 2 + rnorm(length(`1`))
)
annoying[["1"]]
annoying$`1`
ggplot(annoying, aes(x = `1`, y=`2`)) +
geom_point()
annoying[["3"]] <- annoying$`2` / annoying$`1`
annoying <- rename(annoying, one = `1`, two = `2`, three = `3`)
glimpse(annoying)
